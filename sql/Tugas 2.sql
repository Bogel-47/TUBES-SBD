-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2020-11-21 23:15:02 ICT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE admin (
    id_admin        INTEGER NOT NULL,
    nama            VARCHAR2(20 BYTE) NOT NULL,
    login_username  VARCHAR2(20 BYTE) NOT NULL
);

CREATE UNIQUE INDEX admin__idx ON
    admin (
        login_username
    ASC );

ALTER TABLE admin ADD CONSTRAINT admin_pk PRIMARY KEY ( id_admin );

CREATE TABLE book (
    id_booking        INTEGER NOT NULL,
    check_in          DATE NOT NULL,
    check_out         DATE NOT NULL,
    pelanggan_id_plg  INTEGER NOT NULL
);

ALTER TABLE book ADD CONSTRAINT book_pk PRIMARY KEY ( id_booking );

CREATE TABLE login (
    username  VARCHAR2(20 BYTE) NOT NULL,
    password  VARCHAR2(20 BYTE) NOT NULL
);

ALTER TABLE login ADD CONSTRAINT login_pk PRIMARY KEY ( username );

CREATE TABLE manager (
    login_username  VARCHAR2(20 BYTE) NOT NULL,
    id_manager      INTEGER NOT NULL,
    nama            VARCHAR2(20 BYTE) NOT NULL
);

CREATE UNIQUE INDEX manager__idx ON
    manager (
        login_username
    ASC );

ALTER TABLE manager ADD CONSTRAINT manager_pk PRIMARY KEY ( id_manager );

CREATE TABLE pelanggan (
    id_plg          INTEGER NOT NULL,
    no_tlp          NUMBER(13, 13) NOT NULL,
    tgl_lahir       DATE NOT NULL,
    alamat          VARCHAR2(200 BYTE) NOT NULL,
    nama_plg        VARCHAR2(20 BYTE) NOT NULL,
    login_username  VARCHAR2(20 BYTE) NOT NULL
);

CREATE UNIQUE INDEX pelanggan__idx ON
    pelanggan (
        login_username
    ASC );

ALTER TABLE pelanggan ADD CONSTRAINT pelanggan_pk PRIMARY KEY ( id_plg );

CREATE TABLE relation_10 (
    room_id_room                INTEGER NOT NULL,
    transaction_id_transaction  INTEGER NOT NULL
);

ALTER TABLE relation_10 ADD CONSTRAINT relation_10_pk PRIMARY KEY ( room_id_room,
                                                                    transaction_id_transaction );

CREATE TABLE relation_2 (
    room_id_room     INTEGER NOT NULL,
    book_id_booking  INTEGER NOT NULL
);

ALTER TABLE relation_2 ADD CONSTRAINT relation_2_pk PRIMARY KEY ( room_id_room,
                                                                  book_id_booking );

CREATE TABLE relation_7 (
    admin_id_admin              INTEGER NOT NULL,
    transaction_id_transaction  INTEGER NOT NULL
);

ALTER TABLE relation_7 ADD CONSTRAINT relation_7_pk PRIMARY KEY ( admin_id_admin,
                                                                  transaction_id_transaction );

CREATE TABLE relation_8 (
    manager_id_manager  INTEGER NOT NULL,
    report_id_report    INTEGER NOT NULL
);

ALTER TABLE relation_8 ADD CONSTRAINT relation_8_pk PRIMARY KEY ( manager_id_manager,
                                                                  report_id_report );

CREATE TABLE relation_9 (
    report_id_report            INTEGER NOT NULL,
    transaction_id_transaction  INTEGER NOT NULL
);

ALTER TABLE relation_9 ADD CONSTRAINT relation_9_pk PRIMARY KEY ( report_id_report,
                                                                  transaction_id_transaction );

CREATE TABLE report (
    id_report     INTEGER NOT NULL,
    jenis_report  VARCHAR2(50 BYTE) NOT NULL
);

ALTER TABLE report ADD CONSTRAINT report_pk PRIMARY KEY ( id_report );

CREATE TABLE room (
    id_room         INTEGER NOT NULL,
    no_room         INTEGER NOT NULL,
    tipe_room       VARCHAR2(20 BYTE) NOT NULL,
    available_room  CHAR(1) NOT NULL
);

ALTER TABLE room ADD CONSTRAINT room_pk PRIMARY KEY ( id_room );

CREATE TABLE transaction (
    id_transaction          INTEGER NOT NULL,
    jumlah_total_fasilitas  NUMBER(38, 38) NOT NULL
);

ALTER TABLE transaction ADD CONSTRAINT transaction_pk PRIMARY KEY ( id_transaction );

ALTER TABLE admin
    ADD CONSTRAINT admin_login_fk FOREIGN KEY ( login_username )
        REFERENCES login ( username );

ALTER TABLE book
    ADD CONSTRAINT book_pelanggan_fk FOREIGN KEY ( pelanggan_id_plg )
        REFERENCES pelanggan ( id_plg );

ALTER TABLE manager
    ADD CONSTRAINT manager_login_fk FOREIGN KEY ( login_username )
        REFERENCES login ( username );

ALTER TABLE pelanggan
    ADD CONSTRAINT pelanggan_login_fk FOREIGN KEY ( login_username )
        REFERENCES login ( username );

ALTER TABLE relation_10
    ADD CONSTRAINT relation_10_room_fk FOREIGN KEY ( room_id_room )
        REFERENCES room ( id_room );

ALTER TABLE relation_10
    ADD CONSTRAINT relation_10_transaction_fk FOREIGN KEY ( transaction_id_transaction )
        REFERENCES transaction ( id_transaction );

ALTER TABLE relation_2
    ADD CONSTRAINT relation_2_book_fk FOREIGN KEY ( book_id_booking )
        REFERENCES book ( id_booking );

ALTER TABLE relation_2
    ADD CONSTRAINT relation_2_room_fk FOREIGN KEY ( room_id_room )
        REFERENCES room ( id_room );

ALTER TABLE relation_7
    ADD CONSTRAINT relation_7_admin_fk FOREIGN KEY ( admin_id_admin )
        REFERENCES admin ( id_admin );

ALTER TABLE relation_7
    ADD CONSTRAINT relation_7_transaction_fk FOREIGN KEY ( transaction_id_transaction )
        REFERENCES transaction ( id_transaction );

ALTER TABLE relation_8
    ADD CONSTRAINT relation_8_manager_fk FOREIGN KEY ( manager_id_manager )
        REFERENCES manager ( id_manager );

ALTER TABLE relation_8
    ADD CONSTRAINT relation_8_report_fk FOREIGN KEY ( report_id_report )
        REFERENCES report ( id_report );

ALTER TABLE relation_9
    ADD CONSTRAINT relation_9_report_fk FOREIGN KEY ( report_id_report )
        REFERENCES report ( id_report );

ALTER TABLE relation_9
    ADD CONSTRAINT relation_9_transaction_fk FOREIGN KEY ( transaction_id_transaction )
        REFERENCES transaction ( id_transaction );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            13
-- CREATE INDEX                             3
-- ALTER TABLE                             27
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

INSERT INTO Admin (Id_admin,Nama,login_username)
VALUES (1915,'Hargi','bogel47');

SELECT * FROM Admin;

INSERT INTO manager (Id_manager,Nama,login_username)
VALUES (1900,'Marcell','MIVI');

SELECT * FROM manager

INSERT INTO REPORT (Id_report,jenis_report)
VALUES (27,'HARGA');

SELECT * FROM REPORT;

CREATE OR REPLACE PROCEDURE check_in(
    in_id_room NUMBER 
)
IS
  r_room ROOM%ROWTYPE;
BEGIN
  SELECT *
  INTO r_room
  FROM ROOM
  WHERE id_room = in_id_room;
  
  UPDATE ROOM
  SET AVAILABLE_ROOM = '0'
  WHERE id_room = in_id_room;
END;

CREATE OR REPLACE PROCEDURE check_out(
    in_id_room NUMBER 
)
IS
  r_room ROOM%ROWTYPE;
BEGIN
  SELECT *
  INTO r_room
  FROM ROOM
  WHERE id_room = in_id_room;
  
  UPDATE ROOM
  SET AVAILABLE_ROOM = '1'
  WHERE id_room = in_id_room;
END;

SELECT * FROM ROOM

INSERT INTO ROOM
VALUES (1,2001,'KING', 1);

BEGIN
  check_out (1);
END;

CREATE OR REPLACE PACKAGE in_out AS
PROCEDURE CHECK_IN(in_id_room NUMBER);
PROCEDURE CHECK_OUT(in_id_room NUMBER);
END in_out;

CREATE OR REPLACE PACKAGE BODY in_out AS 
PROCEDURE check_out (in_id_room NUMBER) IS
r_room ROOM%ROWTYPE;
BEGIN
  SELECT *
  INTO r_room
  FROM ROOM
  WHERE id_room = in_id_room;
  
  UPDATE ROOM
  SET AVAILABLE_ROOM = '1'
  WHERE id_room = in_id_room;
END;

PROCEDURE check_in (in_id_room NUMBER) IS
  r_room ROOM%ROWTYPE;
BEGIN
  SELECT *
  INTO r_room
  FROM ROOM
  WHERE id_room = in_id_room;
  
  UPDATE ROOM
  SET AVAILABLE_ROOM = '0'
  WHERE id_room = in_id_room;
END;
END in_out;